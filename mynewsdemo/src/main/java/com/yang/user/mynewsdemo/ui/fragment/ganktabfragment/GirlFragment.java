package com.yang.user.mynewsdemo.ui.fragment.ganktabfragment;import android.app.ActivityOptions;import android.content.Intent;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.StaggeredGridLayoutManager;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.yang.user.mynewsdemo.R;import com.yang.user.mynewsdemo.ui.activity.GirlDetailActivity;import com.yang.user.mynewsdemo.ui.adapter.GankGirlAdapter;import com.yang.user.mynewsdemo.ui.api.GankApis;import com.yang.user.mynewsdemo.ui.bean.GirlBean;import com.yang.user.mynewsdemo.ui.view.basepullrefresh.MyBaseSwipeRefreshLayout;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;/** * Created by User on 2017/3/16. */public class GirlFragment extends Fragment {    private View view;    @BindView(R.id.swipe_refresh)    MyBaseSwipeRefreshLayout myBaseSwipeRefreshLayout;    @BindView(R.id.rv_girl_content)    RecyclerView rvGirlContent;    List<GirlBean.ResultsBean> girlBeenlist = new ArrayList<GirlBean.ResultsBean>();    GankGirlAdapter gankGirlAdapter;    StaggeredGridLayoutManager mStaggeredGridLayoutManager;    /**     * 分页--     */    private int currentpage = 1;/*当前页数*/    private int totalPagerNumber = 3;/*总页数*/    private static final int pagerNumberContent = 200;    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.ganktabfragment_girl, container, false);        ButterKnife.bind(this, view);        initView();        initData();        loadUpData();        return view;    }    private void loadUpData() {//        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {//            @Override//            public void onRefresh() {//                //模拟下拉加载更多//                if (currentpage >= totalPagerNumber) {//                    swipeRefreshLayout.setRefreshing(false);////                    Toast.makeText(getContext(), "我是一个有底线的", Toast.LENGTH_SHORT).show();//                    SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "我是一个有底线的");////                } else {//                    currentpage++;////                    initData();//                    swipeRefreshLayout.setRefreshing(false);//                    gankGirlAdapter.notifyDataSetChanged();////                    Toast.makeText(getContext(), "" + mList.size() + "---" + currentpage, Toast.LENGTH_SHORT).show();//                    SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "一共" + ( girlBeenlist.size() +pagerNumberContent)+"条数据"+ "第" + currentpage+"页");//                }//            }//        });        myBaseSwipeRefreshLayout.setColorSchemeColors(Color.RED,Color.GREEN,Color.BLUE);        myBaseSwipeRefreshLayout.setOnRefreshListener(new MyBaseSwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                if(currentpage >= totalPagerNumber){                    myBaseSwipeRefreshLayout.setRefreshing(false);                    gankGirlAdapter.notifyDataSetChanged();                }else{                    currentpage++;//                    initData();                    gankGirlAdapter.notifyDataSetChanged();                    myBaseSwipeRefreshLayout.setRefreshing(false);                }            }        });        myBaseSwipeRefreshLayout.setBottomColorSchemeColors(Color.GREEN,Color.BLUE,Color.YELLOW,Color.RED);        myBaseSwipeRefreshLayout.setOnBottomRefreshListenrer(new MyBaseSwipeRefreshLayout.OnBottomRefreshListener() {            @Override            public void onBottomRefresh() {                if(currentpage >= totalPagerNumber){                    myBaseSwipeRefreshLayout.setBottomRefreshing(false);                    gankGirlAdapter.notifyDataSetChanged();                }else{                    currentpage++;//                    initData();                    gankGirlAdapter.notifyDataSetChanged();                    myBaseSwipeRefreshLayout.setBottomRefreshing(false);                }            }        });    }    private void initData() {        final Gson gson = new GsonBuilder().create();        Retrofit retrofit = new Retrofit.Builder().baseUrl(GankApis.HOST).addConverterFactory(GsonConverterFactory.create(gson)).build();        GankApis gankapi = retrofit.create(GankApis.class);        final Call<GirlBean> girbean = gankapi.getGirllist(pagerNumberContent, currentpage);        girbean.enqueue(new Callback<GirlBean>() {            @Override            public void onResponse(Call<GirlBean> call, Response<GirlBean> response) {//                girlBeenlist = response.body().getResults();                girlBeenlist.addAll(response.body().getResults());                gankGirlAdapter = new GankGirlAdapter(getActivity(), girlBeenlist);                rvGirlContent.setAdapter(gankGirlAdapter);                gankGirlAdapter.notifyDataSetChanged();                gankGirlAdapter.setOnItemClickListener(new GankGirlAdapter.OnItemClickListener() {                    @Override                    public void onItemClickListener(int position, View view) {                        Log.e("yangjie", "" + position);                        Intent intent = new Intent();                        intent.setClass(getActivity(), GirlDetailActivity.class);                        intent.putExtra("url", girlBeenlist.get(position).getUrl());                        intent.putExtra("id", girlBeenlist.get(position).get_id());                        ActivityOptions options = ActivityOptions.makeSceneTransitionAnimation(getActivity(), view, "shareView");                        getActivity().startActivity(intent, options.toBundle());                    }                });            }            @Override            public void onFailure(Call<GirlBean> call, Throwable t) {            }        });        if (gankGirlAdapter != null) {        }    }    private void initView() {//        GridLayoutManager mgr=new GridLayoutManager(getActivity(),2);//        rvGirlContent.setLayoutManager(mgr);//        mgr.setOrientation(GridLayoutManager.VERTICAL);        mStaggeredGridLayoutManager = new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL);        mStaggeredGridLayoutManager.setGapStrategy(StaggeredGridLayoutManager.GAP_HANDLING_NONE);        //fix issue #52 https://github.com/codeestX/GeekNews/issues/52        mStaggeredGridLayoutManager.setItemPrefetchEnabled(false);        rvGirlContent.setLayoutManager(mStaggeredGridLayoutManager);    }}