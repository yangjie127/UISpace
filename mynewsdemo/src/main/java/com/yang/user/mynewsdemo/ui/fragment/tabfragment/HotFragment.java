package com.yang.user.mynewsdemo.ui.fragment.tabfragment;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.support.v7.widget.DefaultItemAnimator;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.OrientationHelper;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.yang.user.mynewsdemo.R;import com.yang.user.mynewsdemo.ui.adapter.ZhihuHotAdapter;import com.yang.user.mynewsdemo.ui.api.ZhihuApis;import com.yang.user.mynewsdemo.ui.bean.HotListBean;import com.yang.user.mynewsdemo.ui.utils.SnackbarUtil;import com.yang.user.mynewsdemo.ui.view.basepullrefresh.MyBaseSwipeRefreshLayout;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;/** * Created by User on 2017/3/10. */public class HotFragment extends Fragment {    private View view;    private ZhihuHotAdapter adapter;    LayoutInflater layoutInflater;    private List<HotListBean.RecentBean> mList = new ArrayList<HotListBean.RecentBean>();    @BindView(R.id.rv_content)    RecyclerView recyclerView;    @BindView(R.id.swipe_refresh)    MyBaseSwipeRefreshLayout myBaseSwipeRefreshLayout;    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        layoutInflater = LayoutInflater.from(getActivity());        view = layoutInflater.inflate(R.layout.tabfragment_hot, container, false);        ButterKnife.bind(this, view);        initView();        initData();        loadUpData();        return view;    }    private void initData() {        final Gson gson = new GsonBuilder().create();        Retrofit retrofit = new Retrofit.Builder().baseUrl(ZhihuApis.HOST).addConverterFactory(GsonConverterFactory.create(gson)).build();        ZhihuApis zhihuApi = retrofit.create(ZhihuApis.class);        Call<HotListBean> hostlistbeancall = zhihuApi.getHotlistbean(4);        hostlistbeancall.enqueue(new Callback<HotListBean>() {            @Override            public void onResponse(Call<HotListBean> call, Response<HotListBean> response) {                mList = response.body().getRecent();                adapter = new ZhihuHotAdapter(getActivity(), mList);                recyclerView.setAdapter(adapter);                adapter.notifyDataSetChanged();                adapter.setOnItemClickListener(new ZhihuHotAdapter.OnItemClickListener() {                    @Override                    public void onItemClick(int position, View shareView) {                        adapter.setReadState(position, true);                        adapter.notifyItemChanged(position);                    }                });            }            @Override            public void onFailure(Call<HotListBean> call, Throwable t) {            }        });    }    private void loadUpData() {       /* swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                adapter.notifyDataSetChanged();                swipeRefreshLayout.setRefreshing(false);//                    Toast.makeText(getContext(), "" + mList.size() + "---" + currentpage, Toast.LENGTH_SHORT).show();                SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "刷新成功");            }        });*/        myBaseSwipeRefreshLayout.setColorSchemeColors(Color.RED, Color.GREEN, Color.BLUE);        myBaseSwipeRefreshLayout.setOnRefreshListener(new MyBaseSwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                adapter.notifyDataSetChanged();                myBaseSwipeRefreshLayout.setRefreshing(false);                SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "刷新成功");            }        });        myBaseSwipeRefreshLayout.setBottomColorSchemeColors(Color.GREEN, Color.BLUE, Color.YELLOW, Color.RED);        myBaseSwipeRefreshLayout.setOnBottomRefreshListenrer(new MyBaseSwipeRefreshLayout.OnBottomRefreshListener() {            @Override            public void onBottomRefresh() {                adapter.notifyDataSetChanged();                myBaseSwipeRefreshLayout.setBottomRefreshing(false);                SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "刷新成功");            }        });    }    private void initView() {        //设置为垂直布局，这也是默认的        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());        recyclerView.setLayoutManager(layoutManager);        layoutManager.setOrientation(OrientationHelper.VERTICAL);        recyclerView.setItemAnimator(new DefaultItemAnimator());    }}