package com.yang.user.mynewsdemo.ui.fragment.tabfragment;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.OrientationHelper;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.yang.user.mynewsdemo.R;import com.yang.user.mynewsdemo.ui.adapter.CommonAdapter;import com.yang.user.mynewsdemo.ui.api.ZhihuApis;import com.yang.user.mynewsdemo.ui.bean.DailyBean;import com.yang.user.mynewsdemo.ui.utils.SnackbarUtil;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;/** * Created by User on 2017/3/10. */public class DailyFragment extends Fragment {    @BindView(R.id.swipe_refresh)    public SwipeRefreshLayout swipeRefreshLayout;    private View view;    @BindView(R.id.rv_daily_list)    public RecyclerView recyclerView;    List<DailyBean.StoriesBean> liststor = new ArrayList<DailyBean.StoriesBean>();    CommonAdapter commonAdapter;    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.tabfragment_daily, container, false);        ButterKnife.bind(this, view);        initView();        initData();        loadUpData();        return view;    }    private void loadUpData() {        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                commonAdapter.notifyDataSetChanged();                swipeRefreshLayout.setRefreshing(false);//                    Toast.makeText(getContext(), "" + mList.size() + "---" + currentpage, Toast.LENGTH_SHORT).show();                SnackbarUtil.showShort(getActivity().getWindow().getDecorView(), "刷新成功");            }        });    }    private void initData() {        final Gson gson = new GsonBuilder().create();        Retrofit retrofit = new Retrofit.Builder().baseUrl(ZhihuApis.HOST).addConverterFactory(GsonConverterFactory.create(gson)).build();        ZhihuApis zhihuapis = retrofit.create(ZhihuApis.class);        Call<DailyBean> dailybeancall = zhihuapis.getDailyList(4);        dailybeancall.enqueue(new Callback<DailyBean>() {            @Override            public void onResponse(Call<DailyBean> call, Response<DailyBean> response) {                swipeRefreshLayout.setRefreshing(true);                liststor = response.body().getStories();                Log.e("yangjie", "---------------------: " + liststor.size());                commonAdapter = new CommonAdapter(getActivity(), liststor);                swipeRefreshLayout.setRefreshing(false);                recyclerView.setAdapter(commonAdapter);                commonAdapter.notifyDataSetChanged();                commonAdapter.setOnItemClickListener(new CommonAdapter.OnItemClickListener() {                    @Override                    public void onItemClick(int position, View shareView) {                        commonAdapter.setReadState(position, true);                        commonAdapter.notifyItemChanged(position);                    }                });            }            @Override            public void onFailure(Call<DailyBean> call, Throwable t) {            }        });    }    private void initView() {        //设置为垂直布局，这也是默认的        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());        recyclerView.setLayoutManager(layoutManager);        layoutManager.setOrientation(OrientationHelper.VERTICAL);    }}